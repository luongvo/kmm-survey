name: Android - Deploy Production build to Firebase

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy_android_production_to_firebase:
    name: Deploy android production to Firebase
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup BuildKonfig Properties
        env:
          BUILD_KONFIG_PROPERTIES: ${{ secrets.BUILD_KONFIG_PROPERTIES }}
        run: |
          echo $BUILD_KONFIG_PROPERTIES | base64 --decode > buildKonfig.properties

      - name: Setup Google Services
        env:
          ANDROID_PRODUCTION_GOOGLE_SERVICES_JSON: ${{ secrets.ANDROID_PRODUCTION_GOOGLE_SERVICES_JSON }}
        run: |
          mkdir -p android/src/production
          echo $ANDROID_PRODUCTION_GOOGLE_SERVICES_JSON > android/src/production/google-services.json

      - name: Setup Android release signing
        env:
          ANDROID_RELEASE_KEYSTORE: ${{ secrets.ANDROID_RELEASE_KEYSTORE }}
          ANDROID_SIGNING_PROPERTIES: ${{ secrets.ANDROID_SIGNING_PROPERTIES }}
        run: |
          echo $ANDROID_RELEASE_KEYSTORE | base64 --decode > config/release.keystore
          echo $ANDROID_SIGNING_PROPERTIES | base64 --decode > signing.properties

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - uses: chkfung/android-version-actions@v1.1
        with:
          gradlePath: android/build.gradle.kts
          versionCode: ${{ github.run_number }}

      - name: Build the Production App Bundle
        run: ./gradlew bundleProductionRelease

      - name: Read the current version
        id: version
        run: echo "version=$(perl -nle 'print $1 if /ANDROID_VERSION_NAME = \"(.*)\"$/' buildSrc/src/main/java/Dependencies.kt)" >> $GITHUB_OUTPUT

      - name: Upload the Android Production bundle to the Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          releaseFiles: android/build/outputs/bundle/productionRelease/android-production-release.aab
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: vn.luongvo.kmm.survey.android
          releaseName: ${{ steps.version.outputs.version }}
          track: internal
          status: draft
          whatsNewDirectory: .github/workflows/whatsnew
